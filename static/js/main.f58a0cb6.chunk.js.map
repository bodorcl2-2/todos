{"version":3,"sources":["context/TodoContext.js","components/Todo.js","utils/Utils.js","components/List.js","context/DataToFormContext.js","components/AddTodo.js","components/EditForm.js","App.js","index.js"],"names":["TodoContext","createContext","TodoContextProvider","props","useState","tasks","setTasks","compare","setCompare","sortingAsc","setSortingAsc","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","handleOnUpdateTask","editTask","console","log","handleOnAddTask","newTask","prevState","handleOnDeleteTask","e","tasks1","filter","task","id","currentTarget","handleSortList","prevCompare","children","Todo","useContext","handleOnEditTask","history","useHistory","Box","display","justifyContent","alignItems","ml","mr","p","boxShadow","width","textAlign","Typography","variant","color","gutterBottom","taskGroup","Tooltip","title","taskName","taskDate","taskTime","Button","onClick","push","onMouseUp","startIcon","compareValues","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","List","settingEditTask","m","mt","pb","sort","map","item","DataToFormContext","DataToFormContextProvider","tasksName","groupsName","dataToForm","AddTodo","uuidv4","setNewTask","handleOnChange","target","name","action","onSubmit","preventDefault","FormControl","Select","labelId","required","onChange","option","MenuItem","FormHelperText","Input","type","label","min","max","EditForm","useParams","tymczas","updateTask","setUpdateTask","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f58a0cb6.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\r\n// import { compareValues } from '../utils/Utils';\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [compare, setCompare] = useState(\"taskDate\");\r\n    // const [prevCompare, setPrevCompare] = useState (\"taskDate\")\r\n    const [sortingAsc, setSortingAsc] = useState(\"asc\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const data = localStorage.getItem(\"my-todo\");\r\n        if (data) {\r\n            setTasks(JSON.parse(data))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"my-todo\", JSON.stringify(tasks))\r\n    })\r\n\r\n    const handleOnDeleteTask = (e) => {\r\n        let tasks1 = [...tasks];\r\n        tasks1 = tasks1.filter((task) => task.id !== e.currentTarget.id);\r\n        // tasks1 = tasks1.sort((a, b) => a.hour - b.hour).filter(task => task.id !== e.target.id)\r\n        // tasks1.splice(e.target.id, 1)\r\n        setTasks(tasks1);\r\n    };\r\n\r\n    const handleOnAddTask = (newTask) => {\r\n\r\n        setTasks((prevState) => [...prevState, newTask]);\r\n\r\n    };\r\n\r\n    // const settingEditTask = (e) => {\r\n\r\n    //   const task1 = tasks.filter((task) => task.id === e.currentTarget.id);\r\n    //   console.log(task1[0]);\r\n    //   setEditTask(task1[0]);\r\n    //   console.log(window.location)\r\n    //   // window.location.href = `${window.location}bla/jhkjhkj.html`;\r\n    //   // window.history.back()\r\n    // }\r\n\r\n    const handleOnUpdateTask = (editTask) => {\r\n        console.log(editTask)\r\n    }\r\n\r\n    const handleSortList = (e) => {\r\n\r\n        const prevCompare = compare;\r\n        setCompare(e.currentTarget.id);\r\n\r\n        if (prevCompare === e.currentTarget.id) {\r\n            setSortingAsc((sortingAsc === \"asc\") ? \"desc\" : \"asc\")\r\n        } else {\r\n            setSortingAsc(\"asc\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{ tasks, compare, sortingAsc, handleOnUpdateTask, handleOnAddTask, handleOnDeleteTask, handleSortList }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoContextProvider;","import React, { useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst Todo = (props) => {\r\n\r\n  const { handleOnDeleteTask, handleOnEditTask } = useContext(TodoContext);\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"center\"\r\n      ml={4}\r\n      mr={4}\r\n      p={2}\r\n      boxShadow={2}\r\n    >\r\n      <Box width=\"10%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"primary\"\r\n          gutterBottom\r\n        >\r\n          {props.taskGroup}\r\n        </Typography>\r\n      </Box>\r\n      <Tooltip title=\"Tu będą kiedyś wyświetlane szczeguły zadania ;)\">\r\n        <Box width=\"30%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"secondary\"\r\n            gutterBottom\r\n          >\r\n            {props.taskName}\r\n          </Typography>\r\n        </Box>\r\n      </Tooltip>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {props.taskDate}\r\n        </Typography>\r\n      </Box>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {props.taskTime}\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        width=\"20%\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Button\r\n          id={props.id}\r\n          // czy da się przypisać dwa działania pod jedno zdarzenie?\r\n          onClick={() => history.push(`/edit/${props.id}`)}\r\n          onMouseUp={handleOnEditTask}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Edytuj\r\n            </Button>\r\n        <Button\r\n          id={props.id}\r\n          onClick={handleOnDeleteTask}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Usuń\r\n      </Button>\r\n      </Box >\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","const compareValues = (key, order = 'asc') => {\r\n    return function innerSort(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string')\r\n            ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string')\r\n            ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n}\r\n\r\nexport { compareValues };","import React, { useContext } from 'react';\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nimport Todo from \"./Todo\";\r\nimport { compareValues } from \"../utils/Utils\"\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst List = () => {\r\n\r\n    const { tasks, compare, sortingAsc, handleSortList, handleOnDeleteTask, settingEditTask } = useContext(TodoContext)\r\n    // const history = useHistory()\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Zaplanowane zadania\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                ml={4}\r\n                mr={4}\r\n                mt={-2}\r\n                pb={2}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box width=\"10%\" textAlign=\"center\" ml={2} id=\"taskGroup\" onClick={handleSortList}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    // color=\"primary\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"30%\" textAlign=\"center\" id=\"taskName\" onClick={handleSortList}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    // color=\"secondary\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskDate\" onClick={handleSortList}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskTime\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" >\r\n                </Box>\r\n            </Box>\r\n            {\r\n                tasks.sort(compareValues('taskTime'))\r\n                    .sort(compareValues(compare, sortingAsc))\r\n                    .map((item) => (\r\n                        <Todo\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            taskGroup={item.taskGroup}\r\n                            taskName={item.taskName}\r\n                            taskDate={item.taskDate}\r\n                            taskTime={item.taskTime}\r\n                            handleOnDeleteTask={handleOnDeleteTask}\r\n                            settingEditTask={settingEditTask}\r\n                        />\r\n                    ))\r\n            }\r\n            {/* <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                 <Button\r\n                    id={tasks.id}\r\n                    onClick={() => history.push(`/add`)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Dodaj nowe\r\n                </Button> \r\n            </Box> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState, createContext } from 'react';\r\n\r\nexport const DataToFormContext = createContext();\r\n\r\nconst DataToFormContextProvider = (props) => {\r\n\r\n    const [dataToForm, setdataToForm] = useState(\r\n        {\r\n            tasksName: [\"powtórka\", \"sprawdzian\", \"kartkówka\", \"pytanie\", \"luzik\"],\r\n            groupsName: [\"1a\", \"1b\", \"1c\", \"2a\", \"2b\", \"2c\"]\r\n        }\r\n    );\r\n\r\n    return (\r\n        <DataToFormContext.Provider value={{ ...dataToForm }}>\r\n            {props.children}\r\n        </DataToFormContext.Provider>\r\n    );\r\n}\r\n\r\nexport default DataToFormContextProvider;","import React, { useState, useContext } from \"react\";\r\n// import { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nconst AddTodo = () => {\r\n\r\n  const { handleOnAddTask } = useContext(TodoContext);\r\n  const { tasksName, groupsName } = useContext(DataToFormContext)\r\n  // const history = useHistory()\r\n  const [newTask, setNewTask] = useState({\r\n    id: uuidv4(),\r\n    taskGroup: \"\",\r\n    taskName: \"\",\r\n    taskDate: \"\",\r\n    taskTime: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setNewTask(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <form action=\"#\" onSubmit={(e) => {\r\n      e.preventDefault()\r\n      handleOnAddTask(newTask)\r\n      setNewTask({\r\n        id: uuidv4(),\r\n        taskGroup: \"\",\r\n        taskName: \"\",\r\n        taskDate: \"\",\r\n        taskTime: \"\"\r\n      })\r\n      // history.push(`/`)\r\n    }} >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"primary\"\r\n          gutterBottom\r\n        >\r\n          Dodaj nowe zadanie\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        ml={4}\r\n        mr={4}\r\n        mt={-3}\r\n        // p={1}\r\n        boxShadow={2}\r\n      >\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Grupa\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Zadanie\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Data\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Godzina\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskGroup\"\r\n            name=\"taskGroup\"\r\n            required\r\n            id=\"taskGroup\"\r\n            value={newTask.taskGroup}\r\n            // onChange={handleChangeGroup}\r\n            onChange={handleOnChange}\r\n          >\r\n            {groupsName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <FormHelperText>Wybierz klasę</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskName\"\r\n            name=\"taskName\"\r\n            id=\"taskName\"\r\n            required\r\n            value={newTask.taskName}\r\n            onChange={handleOnChange}\r\n          >\r\n            {tasksName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <FormHelperText>Wybierz zadanie</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Data\"\r\n            name=\"taskDate\"\r\n            id=\"taskDate\"\r\n            required\r\n            value={newTask.taskDate}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Data</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"time\"\r\n            min=\"08:00\"\r\n            max=\"15:10\"\r\n            name=\"taskTime\"\r\n            id=\"taskTime\"\r\n            required\r\n            value={newTask.taskTime}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Godzina</FormHelperText>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddCircleIcon />}\r\n        >\r\n          Dodaj\r\n        </Button>\r\n      </Box>\r\n    </form >\r\n  );\r\n};\r\nexport default AddTodo;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst EditForm = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { tasksName, groupsName } = useContext(DataToFormContext)\r\n    const { tasks, handleOnUpdateTask } = useContext(TodoContext)\r\n\r\n    const { id } = useParams();\r\n    const tymczas = tasks.filter((task) => task.id === id)[0]\r\n    const [updateTask, setUpdateTask] = useState(\r\n        tymczas\r\n    );\r\n\r\n    console.log(id)\r\n    // const { taskGorup, taskName, taskDate, taskTime } = updateTask\r\n\r\n    const handleOnChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUpdateTask(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <form action=\"#\" onSubmit={(e) => {\r\n            // e.preventDefault()\r\n            handleOnUpdateTask(updateTask)\r\n        }} >\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Edytuj zadanie\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                mt={-3}\r\n                ml={4}\r\n                mr={4}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <FormControl>\r\n\r\n                    <Select\r\n                        labelId=\"taskGroup\"\r\n                        name=\"taskGroup\"\r\n                        id=\"taskGroup\"\r\n                        value={updateTask.taskGroup}\r\n                        // onChange={handleChangeGroup}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {groupsName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz klasę</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select\r\n                        labelId=\"taskName\"\r\n                        name=\"taskName\"\r\n                        id=\"taskName\"\r\n                        value={updateTask.taskName}\r\n                        // onClick={handleChangeTask}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {tasksName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz zadanie</FormHelperText>\r\n                </FormControl>\r\n\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"date\"\r\n                        label=\"Data\"\r\n                        name=\"taskDate\"\r\n                        id=\"taskDate\"\r\n                        value={updateTask.taskDate}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Data</FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"time\"\r\n                        min=\"08:00\"\r\n                        max=\"15:10\"\r\n                        name=\"taskTime\"\r\n                        id=\"taskTime\"\r\n                        value={updateTask.taskTime}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Godzina</FormHelperText>\r\n\r\n                </FormControl>\r\n\r\n                <Button\r\n                    onClick={() => history.push(`/`)}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CheckIcon />}\r\n                >\r\n                    Aktualizuj\r\n          </Button>\r\n\r\n            </Box>\r\n        </form >\r\n    );\r\n};\r\nexport default EditForm;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport List from \"./components/List\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport EditForm from \"./components/EditForm\";\r\nimport TodoContextProvider from \"./context/TodoContext\";\r\nimport DataToFormContextProvider from \"./context/DataToFormContext\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <TodoContextProvider>\r\n      <DataToFormContextProvider>\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <List />\r\n                <AddTodo />\r\n              </Route>\r\n              {/* <Route path=\"/add\">\r\n                <List />\r\n                <AddTodo />\r\n              </Route> */}\r\n              <Route exact path=\"/edit/:id\">\r\n                <EditForm />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </DataToFormContextProvider>\r\n    </TodoContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}