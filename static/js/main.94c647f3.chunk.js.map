{"version":3,"sources":["utils/Firebase.js","components/Loader.js","context/AuthContext.js","context/TodoContext.js","context/DataToFormContext.js","components/Login.js","components/PrivateRoute.js","utils/Utils.js","components/Todo.js","components/List.js","components/AddTodo.js","components/Logout.js","routeComponent/RouteMain.js","components/EditForm.js","routeComponent/RouteEdit.js","components/FilterList.js","routeComponent/RouteFilter.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Loader","className","CircularProgress","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","console","log","Provider","value","TodoContext","TodoContextProvider","props","tasks","setTasks","compare","setCompare","sortingAsc","setSortingAsc","unsubscribe","firestore","collection","onSnapshot","snapshot","newTasks","docs","map","doc","id","data","localStorage","setItem","JSON","stringify","handleOnUpdateTask","task","set","handleOnAddTask","newTask","add","handleOnDeleteTask","e","docId","currentTarget","delete","handleSortList","prevCompare","handleOnFilter","dataset","group","DataToFormContext","DataToFormContextProvider","tasksName","groupsName","dataToForm","Login","history","useHistory","handleLogin","a","preventDefault","target","elements","email","password","signInWithEmailAndPassword","push","alert","useContext","to","onSubmit","htmlFor","name","type","placeholder","PrivateRoute","RouteComponent","component","rest","render","routeProps","compareValues","key","order","b","hasOwnProperty","varA","toUpperCase","varB","comparison","Todo","str","sign","Box","display","justifyContent","alignItems","ml","mr","p","boxShadow","Tooltip","title","placement","width","textAlign","data-group","taskGroup","onClick","Typography","variant","color","gutterBottom","taskName","taskDate","split","reverse","join","taskTime","IconButton","List","settingEditTask","m","mt","pb","fontSize","sort","item","AddTodo","setNewTask","handleOnChange","prevState","action","FormControl","Select","labelId","required","onChange","option","MenuItem","FormHelperText","Input","label","min","max","Logout","signOut","RouteEdit","EditForm","useParams","tymczas","find","updateTask","setUpdateTask","Button","startIcon","FilterList","filter","filterTasks","App","exact","path","RouteMain","RouteFilter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94c647f3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDhXyuF2OYhFg5In1Nt4hK6ZzVPQbhUkfo\",\r\n    authDomain: \"react-firebase-auth-bf829.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-auth-bf829.firebaseio.com\",\r\n    projectId: \"react-firebase-auth-bf829\",\r\n    storageBucket: \"react-firebase-auth-bf829.appspot.com\",\r\n    messagingSenderId: \"664832777103\",\r\n    appId: \"1:664832777103:web:0ceb6bfdbbd34bca4989fa\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useEffect, useState, createContext } from \"react\";\r\nimport firebase from '../utils/Firebase';\r\nimport Loader from '../components/Loader';\r\n\r\nexport const AuthContext = createContext();\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [pending, setPending] = useState(true);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user)\r\n            setPending(false)\r\n        });\r\n    }, []);\r\n    console.log(currentUser)\r\n    if (pending) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser }} >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}; ","import React, { useState, useEffect, createContext } from 'react';\r\nimport firebase from '../utils/Firebase'\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [compare, setCompare] = useState(\"taskDate\");\r\n    const [sortingAsc, setSortingAsc] = useState(\"asc\");\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .onSnapshot(snapshot => {\r\n                const newTasks = snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                setTasks(newTasks)\r\n            })\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"my-todo\", JSON.stringify(tasks))\r\n    })\r\n\r\n    const handleOnDeleteTask = (e) => {\r\n\r\n        const docId = e.currentTarget.id\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(docId).delete()\r\n\r\n    };\r\n\r\n    const handleOnAddTask = (newTask) => {\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .add(newTask)\r\n    };\r\n\r\n    const handleOnUpdateTask = (task) => {\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection(\"todos\")\r\n            .doc(task.id)\r\n            .set(\r\n                task\r\n            )\r\n\r\n    }\r\n\r\n    const handleSortList = (e) => {\r\n        const prevCompare = compare;\r\n        setCompare(e.currentTarget.id);\r\n        if (prevCompare === e.currentTarget.id) {\r\n            setSortingAsc((sortingAsc === \"asc\") ? \"desc\" : \"asc\")\r\n        } else {\r\n            setSortingAsc(\"asc\")\r\n        }\r\n    }\r\n\r\n    const handleOnFilter = (e) => {\r\n        const filter = e.currentTarget.dataset.group\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{ tasks, compare, sortingAsc, handleOnUpdateTask, handleOnAddTask, handleOnDeleteTask, handleSortList, handleOnFilter }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoContextProvider;","import React, { useState, createContext } from 'react';\r\n\r\nexport const DataToFormContext = createContext();\r\n\r\nconst DataToFormContextProvider = (props) => {\r\n\r\n    const [dataToForm, setdataToForm] = useState(\r\n        {\r\n            tasksName: [\"powtórka\", \"sprawdzian\", \"kartkówka\", \"pytanie\", \"luzik\"],\r\n            groupsName: [\"1a\", \"1b\", \"1c\", \"2a\", \"2b\", \"2c\", \"3a\", \"3b\", \"3c\"]\r\n        }\r\n    );\r\n\r\n    return (\r\n        <DataToFormContext.Provider value={{ ...dataToForm }}>\r\n            {props.children}\r\n        </DataToFormContext.Provider>\r\n    );\r\n}\r\n\r\nexport default DataToFormContextProvider;","import React, { useCallback, useContext } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router\";\r\nimport firebase from '../utils/Firebase';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n        try {\r\n            await firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(email.value, password.value);\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n        // return history.push(`/`)\r\n    }\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <form className=\"loginForm\" onSubmit={handleLogin}>\r\n                <h1>Belfer todo</h1>\r\n                <label htmlFor=\"email\"> email:</label>\r\n                <input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Email\" />\r\n\r\n                <label htmlFor=\"password\">password:</label>\r\n                <input name=\"password\" id=\"password\" type=\"password\" placeholder=\"Password\" />\r\n\r\n                <button type=\"submit\">Zaloguj</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n// export default withRouter(Login); \r\nexport default Login; ","import React, { useContext } from \"react\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const history = useHistory()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                        // <Redirect to={\"/login\"} />\r\n                        history.push(`/login`)\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default PrivateRoute \r\n","const compareValues = (key, order = 'asc') => {\r\n    return function innerSort(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string')\r\n            ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string')\r\n            ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n}\r\nconst reverseString = (str, sign) => {\r\n    return str.split(sign).reverse().join(sign);\r\n}\r\nexport { compareValues, reverseString };","import React, { useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { reverseString } from '../utils/Utils'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\n\r\n\r\nconst Todo = (props) => {\r\n\r\n  const { handleOnDeleteTask, handleOnFilter } = useContext(TodoContext);\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"center\"\r\n      ml={4}\r\n      mr={4}\r\n      p={2}\r\n      boxShadow={2}\r\n    >\r\n      <Tooltip title=\"filtruj\" placement=\"right\">\r\n        <Box\r\n          className=\"cursorPointer\"\r\n          width=\"6%\"\r\n          textAlign=\"right\"\r\n          mr={4}\r\n          data-group={props.taskGroup}\r\n          onClick={(e) => {\r\n            handleOnFilter(e)\r\n            history.push(`/filter/${props.taskGroup}`)\r\n          }} >\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"primary\"\r\n            gutterBottom\r\n          >\r\n            {props.taskGroup}\r\n          </Typography>\r\n        </Box>\r\n      </Tooltip>\r\n      <Tooltip title=\"Tu będą kiedyś wyświetlane szczegóły zadania ;)\">\r\n        <Box width=\"30%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"secondary\"\r\n            gutterBottom\r\n          >\r\n            {props.taskName}\r\n          </Typography>\r\n        </Box>\r\n      </Tooltip>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {reverseString(props.taskDate, '-')}\r\n        </Typography>\r\n      </Box>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {props.taskTime}\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        width=\"20%\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton\r\n          id={props.id}\r\n          onClick={(e) => {\r\n            history.push(`/edit/${props.id}`)\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        // startIcon={<EditIcon />}\r\n        >\r\n          <EditIcon />\r\n          {/* Edytuj */}\r\n        </IconButton>\r\n        <IconButton\r\n          id={props.id}\r\n          onClick={handleOnDeleteTask}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        // startIcon={<DeleteIcon />}\r\n        >\r\n          <DeleteIcon />\r\n          {/* Usuń */}\r\n        </IconButton>\r\n      </Box >\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react';\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nimport Todo from \"./Todo\";\r\nimport { compareValues } from \"../utils/Utils\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nconst List = () => {\r\n\r\n    const { tasks, compare, sortingAsc, handleSortList, handleOnDeleteTask, settingEditTask } = useContext(TodoContext)\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Zaplanowane zadania\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                ml={4}\r\n                mr={4}\r\n                mt={-2}\r\n                pb={2}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"10%\"\r\n                    textAlign=\"center\"\r\n                    ml={2} id=\"taskGroup\"\r\n                    onClick={\r\n                        handleSortList\r\n                    }\r\n                >\r\n                    <Typography\r\n                        className=\"cursorPointer\"\r\n                        variant=\"h5\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"30%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskName\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        className=\"cursorPointer\"\r\n                        variant=\"h5\"\r\n                    // color=\"secondary\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"20%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskDate\"\r\n                    onClick={handleSortList}>\r\n                    <Typography\r\n                        className=\"cursorPointer\"\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskTime\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" >\r\n                </Box>\r\n            </Box>\r\n            {\r\n                tasks.sort(compareValues('taskTime'))\r\n                    .sort(compareValues(compare, sortingAsc))\r\n                    .map((item) => (\r\n                        <Todo\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            taskGroup={item.taskGroup}\r\n                            taskName={item.taskName}\r\n                            taskDate={item.taskDate}\r\n                            taskTime={item.taskTime}\r\n                            handleOnDeleteTask={handleOnDeleteTask}\r\n                            settingEditTask={settingEditTask}\r\n                        />\r\n                    ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nconst AddTodo = () => {\r\n\r\n  const { handleOnAddTask } = useContext(TodoContext);\r\n  const { tasksName, groupsName } = useContext(DataToFormContext)\r\n  const history = useHistory()\r\n  const [newTask, setNewTask] = useState({\r\n    taskGroup: \"\",\r\n    taskName: \"\",\r\n    taskDate: \"\",\r\n    taskTime: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setNewTask(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <form action=\"#\" onSubmit={(e) => {\r\n      e.preventDefault()\r\n      handleOnAddTask(newTask)\r\n      setNewTask({\r\n        taskGroup: \"\",\r\n        taskName: \"\",\r\n        taskDate: \"\",\r\n        taskTime: \"\"\r\n      })\r\n    }} >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"primary\"\r\n          gutterBottom\r\n        >\r\n          Dodaj nowe zadanie\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        ml={4}\r\n        mr={4}\r\n        mt={-3}\r\n        // p={1}\r\n        boxShadow={2}\r\n      >\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Grupa\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Zadanie\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Data\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Godzina\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskGroup\"\r\n            name=\"taskGroup\"\r\n            required\r\n            id=\"taskGroup\"\r\n            value={newTask.taskGroup}\r\n            // onChange={handleChangeGroup}\r\n            onChange={handleOnChange}\r\n          >\r\n            {groupsName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n\r\n          </Select>\r\n          <FormHelperText>Wybierz klasę</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskName\"\r\n            name=\"taskName\"\r\n            id=\"taskName\"\r\n            required\r\n            value={newTask.taskName}\r\n            onChange={handleOnChange}\r\n          >\r\n            {tasksName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <FormHelperText>Wybierz zadanie</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Data\"\r\n            name=\"taskDate\"\r\n            id=\"taskDate\"\r\n            required\r\n            value={newTask.taskDate}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Data</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"time\"\r\n            min=\"08:00\"\r\n            max=\"15:10\"\r\n            name=\"taskTime\"\r\n            id=\"taskTime\"\r\n            required\r\n            value={newTask.taskTime}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Godzina</FormHelperText>\r\n        </FormControl>\r\n\r\n        <IconButton\r\n          type=\"submit\"\r\n          // variant=\"contained\"\r\n          color=\"primary\"\r\n          // startIcon={<AddCircleIcon />}\r\n          onClick={(e) => history.push(`/`)}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </form >\r\n  );\r\n};\r\nexport default AddTodo;","import React from 'react';\r\nimport firebase from '../utils/Firebase';\r\n\r\nconst Logout = () => {\r\n    return (\r\n        <section className=\"logoutContainer\">\r\n            <button className=\"logoutButton\" onClick={() => firebase.auth().signOut()}>Wyloguj</button>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react'\r\nimport List from '../components/List'\r\nimport AddTodo from '../components/AddTodo'\r\nimport Logout from '../components/Logout'\r\n\r\nconst RouteEdit = () => {\r\n    return (\r\n        <>\r\n            <Logout />\r\n            <List />\r\n            <AddTodo />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RouteEdit;","import React, { useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst EditForm = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { tasksName, groupsName } = useContext(DataToFormContext)\r\n    const { tasks, handleOnUpdateTask } = useContext(TodoContext)\r\n\r\n    const { id } = useParams();\r\n    const tymczas = tasks.find((task) => task.id === id)\r\n    const [updateTask, setUpdateTask] = useState(\r\n        tymczas\r\n    );\r\n\r\n    const handleOnChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUpdateTask(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            handleOnUpdateTask(updateTask)\r\n            history.push(`/`)\r\n        }} >\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Edytuj zadanie\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                mt={-3}\r\n                ml={4}\r\n                mr={4}\r\n                boxShadow={2}\r\n            >\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <FormControl>\r\n\r\n                    <Select\r\n                        labelId=\"taskGroup\"\r\n                        name=\"taskGroup\"\r\n                        id=\"taskGroup\"\r\n                        value={updateTask.taskGroup}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {groupsName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz klasę</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select\r\n                        labelId=\"taskName\"\r\n                        name=\"taskName\"\r\n                        id=\"taskName\"\r\n                        value={updateTask.taskName}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {tasksName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz zadanie</FormHelperText>\r\n                </FormControl>\r\n\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"date\"\r\n                        label=\"Data\"\r\n                        name=\"taskDate\"\r\n                        id=\"taskDate\"\r\n                        value={updateTask.taskDate}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Data</FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"time\"\r\n                        min=\"08:00\"\r\n                        max=\"15:10\"\r\n                        name=\"taskTime\"\r\n                        id=\"taskTime\"\r\n                        value={updateTask.taskTime}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Godzina</FormHelperText>\r\n\r\n                </FormControl>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CheckIcon />}\r\n                >\r\n                    Aktualizuj\r\n          </Button>\r\n\r\n            </Box>\r\n        </form >\r\n    );\r\n};\r\nexport default EditForm;\r\n","import React from 'react'\r\nimport EditForm from '../components/EditForm'\r\nimport AddTodo from '../components/AddTodo'\r\nimport Logout from '../components/Logout'\r\n\r\nconst RouteEdit = () => {\r\n    return (\r\n        <>\r\n            <Logout />\r\n            <EditForm />\r\n            <AddTodo />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RouteEdit;\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport Todo from \"./Todo\";\r\nimport { compareValues } from \"../utils/Utils\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\nconst FilterList = () => {\r\n\r\n    const { filter } = useParams();\r\n    const { tasks, compare, sortingAsc, handleSortList, handleOnDeleteTask, settingEditTask } = useContext(TodoContext)\r\n    const history = useHistory()\r\n\r\n    const [filterTasks, setFilterTasks] = useState(\r\n        tasks.filter((task) => task.taskGroup === filter)\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Zaplanowane zadania\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                ml={4}\r\n                mr={4}\r\n                mt={-2}\r\n                pb={2}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"10%\"\r\n                    textAlign=\"center\"\r\n                    ml={2} id=\"taskGroup\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                    {/* {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />} */}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"30%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskName\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        className=\"cursorPointer\"\r\n                        variant=\"h5\"\r\n                    // color=\"secondary\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"20%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskDate\"\r\n                    onClick={handleSortList}>\r\n                    <Typography\r\n                        className=\"cursorPointer\"\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskTime\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" >\r\n                </Box>\r\n            </Box>\r\n            {\r\n                filterTasks.sort(compareValues('taskTime'))\r\n                    .sort(compareValues(compare, sortingAsc))\r\n                    .map((item) => (\r\n                        <Todo\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            taskGroup={item.taskGroup}\r\n                            taskName={item.taskName}\r\n                            taskDate={item.taskDate}\r\n                            taskTime={item.taskTime}\r\n                            handleOnDeleteTask={handleOnDeleteTask}\r\n                            settingEditTask={settingEditTask}\r\n                        />\r\n                    ))\r\n            }\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Button\r\n                    // id={tasks.id}\r\n                    onClick={() => history.push(`/`)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Powrót\r\n                </Button>\r\n            </Box>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterList;","import React from 'react'\r\nimport FilterList from '../components/FilterList'\r\nimport AddTodo from '../components/AddTodo'\r\nimport Logout from '../components/Logout'\r\n\r\nconst RouteEdit = () => {\r\n    return (\r\n        <>\r\n            <Logout />\r\n            <FilterList />\r\n            <AddTodo />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RouteEdit;","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./context/AuthContext.js\";\r\nimport TodoContextProvider from \"./context/TodoContext\";\r\nimport DataToFormContextProvider from \"./context/DataToFormContext\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport RouteMain from \"./routeComponent/RouteMain\"\r\nimport RouteEdit from \"./routeComponent/RouteEdit\"\r\nimport RouteFilter from \"./routeComponent/RouteFilter\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <TodoContextProvider>\r\n        <DataToFormContextProvider>\r\n          <Router>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={RouteMain} />\r\n              <PrivateRoute exact path=\"/filter/:filter\" component={RouteFilter} />\r\n              <PrivateRoute exact path=\"/edit/:id\" component={RouteEdit} />\r\n            </Switch>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n          </Router>\r\n        </DataToFormContextProvider>\r\n      </TodoContextProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}