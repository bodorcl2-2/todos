{"version":3,"sources":["utils/Firebase.js","context/TodoContext.js","utils/Utils.js","components/Todo.js","components/List.js","context/DataToFormContext.js","components/AddTodo.js","components/EditForm.js","components/FilterList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TodoContext","createContext","TodoContextProvider","props","useState","tasks","setTasks","compare","setCompare","sortingAsc","setSortingAsc","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","newTasks","docs","map","doc","id","data","localStorage","setItem","JSON","stringify","Provider","value","handleOnUpdateTask","task","copy","index","findIndex","item","handleOnAddTask","newTask","prevState","handleOnDeleteTask","e","tasks1","filter","currentTarget","handleSortList","prevCompare","handleOnFilter","dataset","group","children","compareValues","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","Todo","str","sign","useContext","history","useHistory","Box","display","justifyContent","alignItems","ml","mr","p","boxShadow","Tooltip","title","placement","width","textAlign","data-group","taskGroup","onClick","push","Typography","variant","color","gutterBottom","taskName","taskDate","split","reverse","join","taskTime","Button","startIcon","List","settingEditTask","m","mt","pb","fontSize","sort","DataToFormContext","DataToFormContextProvider","tasksName","groupsName","dataToForm","AddTodo","uuidv4","setNewTask","handleOnChange","target","name","action","onSubmit","preventDefault","FormControl","Select","labelId","required","onChange","option","MenuItem","FormHelperText","Input","type","label","min","max","EditForm","useParams","tymczas","find","updateTask","setUpdateTask","FilterList","filterTasks","console","log","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e2560fc.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCF-LRF3sH83a8Q8i_d1dUupqHkZo_tOjo\",\r\n    authDomain: \"todos-4d027.firebaseapp.com\",\r\n    databaseURL: \"https://todos-4d027.firebaseio.com\",\r\n    projectId: \"todos-4d027\",\r\n    storageBucket: \"todos-4d027.appspot.com\",\r\n    messagingSenderId: \"597712020020\",\r\n    appId: \"1:597712020020:web:3b1fb0da6974ed64476061\",\r\n    measurementId: \"G-XWDTD1EE6X\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import React, { useState, useEffect, createContext } from 'react';\r\nimport firebase from '../utils/Firebase'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [compare, setCompare] = useState(\"taskDate\");\r\n    const [sortingAsc, setSortingAsc] = useState(\"asc\");\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .onSnapshot(snapshot => {\r\n                const newTasks = snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }))\r\n                setTasks(newTasks)\r\n            })\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const data = localStorage.getItem(\"my-todo\");\r\n    //     if (data) {\r\n    //         setTasks(JSON.parse(data))\r\n    //     }\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"my-todo\", JSON.stringify(tasks))\r\n    })\r\n\r\n    const handleOnDeleteTask = (e) => {\r\n        let tasks1 = [...tasks];\r\n        tasks1 = tasks1.filter((task) => task.id !== e.currentTarget.id);\r\n        setTasks(tasks1);\r\n    };\r\n\r\n    const handleOnAddTask = (newTask) => {\r\n\r\n        setTasks((prevState) => [...prevState, newTask]);\r\n\r\n    };\r\n\r\n    const handleOnUpdateTask = (task) => {\r\n        const copy = [...tasks]\r\n        const index = copy.findIndex(item => item.id === task.id);\r\n        copy[index] = task;\r\n        setTasks(copy)\r\n    }\r\n\r\n    const handleSortList = (e) => {\r\n        const prevCompare = compare;\r\n        setCompare(e.currentTarget.id);\r\n        if (prevCompare === e.currentTarget.id) {\r\n            setSortingAsc((sortingAsc === \"asc\") ? \"desc\" : \"asc\")\r\n        } else {\r\n            setSortingAsc(\"asc\")\r\n        }\r\n    }\r\n\r\n    const handleOnFilter = (e) => {\r\n        const filter = e.currentTarget.dataset.group\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{ tasks, compare, sortingAsc, handleOnUpdateTask, handleOnAddTask, handleOnDeleteTask, handleSortList, handleOnFilter }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoContextProvider;","const compareValues = (key, order = 'asc') => {\r\n    return function innerSort(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string')\r\n            ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string')\r\n            ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n}\r\nconst reverseString = (str, sign) => {\r\n    return str.split(sign).reverse().join(sign);\r\n}\r\nexport { compareValues, reverseString };","import React, { useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { reverseString } from '../utils/Utils'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\n\r\n\r\nconst Todo = (props) => {\r\n\r\n  const { handleOnDeleteTask, handleOnFilter } = useContext(TodoContext);\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-around\"\r\n      alignItems=\"center\"\r\n      ml={4}\r\n      mr={4}\r\n      p={2}\r\n      boxShadow={2}\r\n    >\r\n      <Tooltip title=\"filtruj\" placement=\"right\">\r\n        <Box width=\"6%\"\r\n          textAlign=\"right\"\r\n          mr={4}\r\n          data-group={props.taskGroup}\r\n          onClick={(e) => {\r\n            handleOnFilter(e)\r\n            history.push(`/filter/${props.taskGroup}`)\r\n          }} >\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"primary\"\r\n            gutterBottom\r\n          >\r\n            {props.taskGroup}\r\n          </Typography>\r\n        </Box>\r\n      </Tooltip>\r\n      <Tooltip title=\"Tu będą kiedyś wyświetlane szczeguły zadania ;)\">\r\n        <Box width=\"30%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"secondary\"\r\n            gutterBottom\r\n          >\r\n            {props.taskName}\r\n          </Typography>\r\n        </Box>\r\n      </Tooltip>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {reverseString(props.taskDate, '-')}\r\n        </Typography>\r\n      </Box>\r\n      <Box width=\"20%\" textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h6\"\r\n        >\r\n          {props.taskTime}\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        width=\"20%\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Button\r\n          id={props.id}\r\n          onClick={(e) => {\r\n            history.push(`/edit/${props.id}`)\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Edytuj\r\n            </Button>\r\n        <Button\r\n          id={props.id}\r\n          onClick={handleOnDeleteTask}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Usuń\r\n      </Button>\r\n      </Box >\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useContext } from 'react';\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Todo from \"./Todo\";\r\nimport { compareValues } from \"../utils/Utils\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nconst List = () => {\r\n\r\n    const { tasks, compare, sortingAsc, handleSortList, handleOnDeleteTask, settingEditTask } = useContext(TodoContext)\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Zaplanowane zadania\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                ml={4}\r\n                mr={4}\r\n                mt={-2}\r\n                pb={2}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"10%\"\r\n                    textAlign=\"center\"\r\n                    ml={2} id=\"taskGroup\"\r\n                    onClick={\r\n                        handleSortList\r\n                    }\r\n                >\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"30%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskName\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    // color=\"secondary\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"20%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskDate\"\r\n                    onClick={handleSortList}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskTime\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" >\r\n                </Box>\r\n            </Box>\r\n            {\r\n                tasks.sort(compareValues('taskTime'))\r\n                    .sort(compareValues(compare, sortingAsc))\r\n                    .map((item) => (\r\n                        <Todo\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            taskGroup={item.taskGroup}\r\n                            taskName={item.taskName}\r\n                            taskDate={item.taskDate}\r\n                            taskTime={item.taskTime}\r\n                            handleOnDeleteTask={handleOnDeleteTask}\r\n                            settingEditTask={settingEditTask}\r\n                        />\r\n                    ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState, createContext } from 'react';\r\n\r\nexport const DataToFormContext = createContext();\r\n\r\nconst DataToFormContextProvider = (props) => {\r\n\r\n    const [dataToForm, setdataToForm] = useState(\r\n        {\r\n            tasksName: [\"powtórka\", \"sprawdzian\", \"kartkówka\", \"pytanie\", \"luzik\"],\r\n            groupsName: [\"1a\", \"1b\", \"1c\", \"2a\", \"2b\", \"2c\", \"3a\", \"3b\", \"3c\"]\r\n        }\r\n    );\r\n\r\n    return (\r\n        <DataToFormContext.Provider value={{ ...dataToForm }}>\r\n            {props.children}\r\n        </DataToFormContext.Provider>\r\n    );\r\n}\r\n\r\nexport default DataToFormContextProvider;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nconst AddTodo = () => {\r\n\r\n  const { handleOnAddTask } = useContext(TodoContext);\r\n  const { tasksName, groupsName } = useContext(DataToFormContext)\r\n  const history = useHistory()\r\n  const [newTask, setNewTask] = useState({\r\n    id: uuidv4(),\r\n    taskGroup: \"\",\r\n    taskName: \"\",\r\n    taskDate: \"\",\r\n    taskTime: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setNewTask(prevState => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <form action=\"#\" onSubmit={(e) => {\r\n      e.preventDefault()\r\n      handleOnAddTask(newTask)\r\n      setNewTask({\r\n        id: uuidv4(),\r\n        taskGroup: \"\",\r\n        taskName: \"\",\r\n        taskDate: \"\",\r\n        taskTime: \"\"\r\n      })\r\n      // history.push(`/`)\r\n    }} >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"primary\"\r\n          gutterBottom\r\n        >\r\n          Dodaj nowe zadanie\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        ml={4}\r\n        mr={4}\r\n        mt={-3}\r\n        // p={1}\r\n        boxShadow={2}\r\n      >\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Grupa\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Zadanie\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Data\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n          >\r\n            Godzina\r\n          </Typography>\r\n        </Box>\r\n        <Box width=\"20%\" textAlign=\"center\">\r\n\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        m={4}\r\n        p={2}\r\n        boxShadow={2}\r\n      >\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskGroup\"\r\n            name=\"taskGroup\"\r\n            required\r\n            id=\"taskGroup\"\r\n            value={newTask.taskGroup}\r\n            // onChange={handleChangeGroup}\r\n            onChange={handleOnChange}\r\n          >\r\n            {groupsName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n\r\n          </Select>\r\n          <FormHelperText>Wybierz klasę</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"taskName\"\r\n            name=\"taskName\"\r\n            id=\"taskName\"\r\n            required\r\n            value={newTask.taskName}\r\n            onChange={handleOnChange}\r\n          >\r\n            {tasksName.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <FormHelperText>Wybierz zadanie</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"date\"\r\n            label=\"Data\"\r\n            name=\"taskDate\"\r\n            id=\"taskDate\"\r\n            required\r\n            value={newTask.taskDate}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Data</FormHelperText>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <Input\r\n            type=\"time\"\r\n            min=\"08:00\"\r\n            max=\"15:10\"\r\n            name=\"taskTime\"\r\n            id=\"taskTime\"\r\n            required\r\n            value={newTask.taskTime}\r\n            onChange={handleOnChange}\r\n          />\r\n          <FormHelperText>Godzina</FormHelperText>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddCircleIcon />}\r\n          onClick={(e) => history.push(`/`)}\r\n        >\r\n          Dodaj\r\n        </Button>\r\n      </Box>\r\n    </form >\r\n  );\r\n};\r\nexport default AddTodo;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DataToFormContext } from \"../context/DataToFormContext\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst EditForm = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { tasksName, groupsName } = useContext(DataToFormContext)\r\n    const { tasks, handleOnUpdateTask } = useContext(TodoContext)\r\n\r\n    const { id } = useParams();\r\n    const tymczas = tasks.find((task) => task.id === id)\r\n    const [updateTask, setUpdateTask] = useState(\r\n        tymczas\r\n    );\r\n\r\n    const handleOnChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUpdateTask(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            handleOnUpdateTask(updateTask)\r\n            history.push(`/`)\r\n        }} >\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Edytuj zadanie\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                mt={-3}\r\n                ml={4}\r\n                mr={4}\r\n                boxShadow={2}\r\n            >\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" ml={-4}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\">\r\n\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <FormControl>\r\n\r\n                    <Select\r\n                        labelId=\"taskGroup\"\r\n                        name=\"taskGroup\"\r\n                        id=\"taskGroup\"\r\n                        value={updateTask.taskGroup}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {groupsName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz klasę</FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Select\r\n                        labelId=\"taskName\"\r\n                        name=\"taskName\"\r\n                        id=\"taskName\"\r\n                        value={updateTask.taskName}\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        {tasksName.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText>Wybierz zadanie</FormHelperText>\r\n                </FormControl>\r\n\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"date\"\r\n                        label=\"Data\"\r\n                        name=\"taskDate\"\r\n                        id=\"taskDate\"\r\n                        value={updateTask.taskDate}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Data</FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                    <Input\r\n                        type=\"time\"\r\n                        min=\"08:00\"\r\n                        max=\"15:10\"\r\n                        name=\"taskTime\"\r\n                        id=\"taskTime\"\r\n                        value={updateTask.taskTime}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <FormHelperText>Godzina</FormHelperText>\r\n\r\n                </FormControl>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CheckIcon />}\r\n                >\r\n                    Aktualizuj\r\n          </Button>\r\n\r\n            </Box>\r\n        </form >\r\n    );\r\n};\r\nexport default EditForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport Todo from \"./Todo\";\r\nimport { compareValues } from \"../utils/Utils\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AddTodo from './AddTodo';\r\n\r\nconst FilterList = () => {\r\n\r\n    const { filter } = useParams();\r\n    const { tasks, compare, sortingAsc, handleSortList, handleOnDeleteTask, settingEditTask } = useContext(TodoContext)\r\n    const history = useHistory()\r\n\r\n    const [filterTasks, setFilterTasks] = useState(\r\n        tasks.filter((task) => task.taskGroup === filter)\r\n    )\r\n    console.log(filterTasks)\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                    gutterBottom\r\n                >\r\n                    Zaplanowane zadania\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                ml={4}\r\n                mr={4}\r\n                mt={-2}\r\n                pb={2}\r\n                // p={1}\r\n                boxShadow={2}\r\n            >\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"10%\"\r\n                    textAlign=\"center\"\r\n                    ml={2} id=\"taskGroup\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    >\r\n                        Grupa\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"30%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskName\"\r\n                    onClick={handleSortList}\r\n                >\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                    // color=\"secondary\"\r\n                    >\r\n                        Zadanie\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    width=\"20%\"\r\n                    textAlign=\"center\"\r\n                    id=\"taskDate\"\r\n                    onClick={handleSortList}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Data\r\n                    </Typography>\r\n                    {(sortingAsc === \"asc\") ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" id=\"taskTime\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        Godzina\r\n                    </Typography>\r\n                </Box>\r\n                <Box width=\"20%\" textAlign=\"center\" >\r\n                </Box>\r\n            </Box>\r\n            {\r\n                filterTasks.sort(compareValues('taskTime'))\r\n                    .sort(compareValues(compare, sortingAsc))\r\n                    .map((item) => (\r\n                        <Todo\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            taskGroup={item.taskGroup}\r\n                            taskName={item.taskName}\r\n                            taskDate={item.taskDate}\r\n                            taskTime={item.taskTime}\r\n                            handleOnDeleteTask={handleOnDeleteTask}\r\n                            settingEditTask={settingEditTask}\r\n                        />\r\n                    ))\r\n            }\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                m={4}\r\n                p={2}\r\n                boxShadow={2}\r\n            >\r\n                <Button\r\n                    // id={tasks.id}\r\n                    onClick={() => history.push(`/`)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Powrót\r\n                </Button>\r\n            </Box>\r\n            <AddTodo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterList;","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport List from \"./components/List\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport EditForm from \"./components/EditForm\";\r\nimport TodoContextProvider from \"./context/TodoContext\";\r\nimport DataToFormContextProvider from \"./context/DataToFormContext\";\r\nimport \"./App.css\";\r\nimport FilterList from \"./components/FilterList\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <TodoContextProvider>\r\n      <DataToFormContextProvider>\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <List />\r\n                <AddTodo />\r\n              </Route>\r\n              <Route path=\"/filter/:filter\">\r\n                <FilterList />\r\n              </Route>\r\n              <Route exact path=\"/edit/:id\">\r\n                <EditForm />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </DataToFormContextProvider>\r\n    </TodoContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}